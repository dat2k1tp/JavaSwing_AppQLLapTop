/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Form;

import Class.SanPham;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class FrmSanPham extends javax.swing.JInternalFrame {

    DefaultTableModel model;
    int index;
    String url, user, pass;
    ArrayList<SanPham> listSP;
    String queryAll = "select * from SanPham";

    public FrmSanPham() {
        initComponents();
        this.listSP = new ArrayList<>();
        this.url = "jdbc:sqlserver://localhost:1433;databaseName=QLBH";
        this.user = "sa";
        this.pass = "111111";
        this.listSP = fetchList();
        filltoTable(listSP);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtGia = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTenSanPham = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtMaSanPham = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtNamSX = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMoTa = new javax.swing.JTextArea();
        btnThemSanPham = new javax.swing.JButton();
        btnXoaSanPham = new javax.swing.JButton();
        btnSuaThongTin = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        txtTimkiem = new javax.swing.JTextField();
        btnTimkiem = new javax.swing.JButton();

        setClosable(true);
        setTitle("Sản Phẩm");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("SẢN PHẨM");

        jLabel2.setText("MÃ SẢN PHẨM");

        jLabel3.setText("TÊN SẢN PHẨM");

        jLabel4.setText("SỐ LƯỢNG");

        jLabel5.setText("GIÁ");

        jLabel6.setText("NĂM SX");

        jLabel7.setText("MÔ TẢ");

        txtMoTa.setColumns(20);
        txtMoTa.setRows(5);
        jScrollPane1.setViewportView(txtMoTa);

        btnThemSanPham.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icon_Them_dangky.png"))); // NOI18N
        btnThemSanPham.setText("THÊM SẢN PHẨM");
        btnThemSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSanPhamActionPerformed(evt);
            }
        });

        btnXoaSanPham.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icon_xoa.png"))); // NOI18N
        btnXoaSanPham.setText("XÓA SẢN PHẨM");

        btnSuaThongTin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icon_suachua.png"))); // NOI18N
        btnSuaThongTin.setText("SỬA THÔNG TIN");
        btnSuaThongTin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaThongTinActionPerformed(evt);
            }
        });

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "Tên SP", "Giá", "Năm SX", "Số Lượng", "Mô Tả"
            }
        ));
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblSanPham);

        txtTimkiem.setText("Search name..");
        txtTimkiem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTimkiemFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTimkiemFocusLost(evt);
            }
        });

        btnTimkiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icon_timkiem.png"))); // NOI18N
        btnTimkiem.setText("Tìm kiếm");
        btnTimkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimkiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(399, 399, 399)
                .addComponent(jLabel1)
                .addContainerGap(389, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnThemSanPham)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(190, 190, 190)
                                .addComponent(btnXoaSanPham)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtGia, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                                    .addComponent(txtTenSanPham)
                                    .addComponent(txtNamSX, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                                    .addComponent(txtMaSanPham))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7)
                                .addGap(32, 32, 32))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtSoLuong)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSuaThongTin)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtTimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnTimkiem))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 823, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnSuaThongTin, btnThemSanPham, btnXoaSanPham});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel2, jLabel3, jLabel4, jLabel5, jLabel6});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtGia, txtMaSanPham, txtNamSX, txtSoLuong, txtTenSanPham});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel7))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(txtTenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(txtMaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtNamSX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemSanPham)
                    .addComponent(btnXoaSanPham)
                    .addComponent(btnSuaThongTin))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimkiem))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel2, jLabel3, jLabel4, jLabel5, jLabel6});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtGia, txtMaSanPham, txtNamSX, txtSoLuong, txtTenSanPham});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSuaThongTinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaThongTinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSuaThongTinActionPerformed

    private void btnThemSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSanPhamActionPerformed
        //validate form
        try {
            //check null
            if (txtMaSanPham.getText().length() == 0) {
                JOptionPane.showMessageDialog(this, "Chưa nhập mã sản phẩm !");
                txtMaSanPham.requestFocus();
                return;

            }
            if (txtTenSanPham.getText().length() == 0) {
                JOptionPane.showMessageDialog(this, "Chưa nhập tên sản phẩm !");
                txtTenSanPham.requestFocus();
                return;

            }
            if (txtSoLuong.getText().length() == 0) {
                JOptionPane.showMessageDialog(this, "Chưa nhập số lượng sản phẩm !");
                txtSoLuong.requestFocus();
                return;

            }
            try {
                int soLuong = Integer.parseInt(txtSoLuong.getText());
                if (soLuong < 0) {
                    JOptionPane.showMessageDialog(this, "Số lượng sản phẩm phải >0 !");
                    txtSoLuong.requestFocus();
                    return;
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Số lượng sản phẩm phải là số !");
                txtSoLuong.requestFocus();
                return;
            }

            if (txtGia.getText().length() == 0) {
                JOptionPane.showMessageDialog(this, "Chưa nhập giá sản phẩm !");
                txtGia.requestFocus();
                return;

            }
            try {
                int gia = Integer.parseInt(txtGia.getText());
                if (gia < 0) {
                    JOptionPane.showMessageDialog(this, "Giá sản phẩm phải >0 !");
                    txtGia.requestFocus();
                    return;
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Giá sản phẩm phải là số !");
                txtGia.requestFocus();
                return;
            }
            if (txtNamSX.getText().length() == 0) {
                JOptionPane.showMessageDialog(this, "Chưa nhập năm sản suất sản phẩm !");
                txtNamSX.requestFocus();
                return;

            }
            try {
                int nam = Integer.parseInt(txtNamSX.getText());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Năm sản suất sản phẩm phải là số !");
                txtNamSX.requestFocus();
                return;
            }
            if (txtNamSX.getText().length() > 4 || txtNamSX.getText().length() < 4) {
                JOptionPane.showMessageDialog(this, "Năm sản suất sản phẩm phải có 4 chữ số !");
                txtNamSX.requestFocus();
                return;
            }
            if (txtMoTa.getText().length() == 0) {
                JOptionPane.showMessageDialog(this, "Chưa nhập mô tả sản phẩm !");
                txtMoTa.requestFocus();
                return;

            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi form");
        }
        //them san pham
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection conn = DriverManager.getConnection(url, user, pass);
            String query = "insert into SanPham values(?,?,?,?,?,?)";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, txtMaSanPham.getText());
            ps.setString(2, txtTenSanPham.getText());
            ps.setFloat(3, Float.parseFloat(txtGia.getText()));
            ps.setInt(4, Integer.parseInt(txtNamSX.getText()));
            ps.setInt(5, Integer.parseInt(txtSoLuong.getText()));
            ps.setString(6, txtMoTa.getText());
            ps.execute();
            listSP.add(new SanPham(txtMaSanPham.getText(),txtTenSanPham.getText()
             ,Float.parseFloat(txtGia.getText()),Integer.parseInt(txtNamSX.getText()),
            Integer.parseInt(txtSoLuong.getText()),txtMoTa.getText()));
            filltoTable(listSP);
            index=listSP.size()-1;
            showDetail();
            JOptionPane.showMessageDialog(this, "Thêm sản phẩm thành công !");

        } catch (SQLException ex) {
            Logger.getLogger(FrmSanPham.class.getName()).log(Level.SEVERE, null, ex);

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrmSanPham.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnThemSanPhamActionPerformed

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        index = tblSanPham.getSelectedRow();
        try {
            if (index >= 0) {
                showDetail();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void btnTimkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimkiemActionPerformed
        queryAll = "select * from SanPham";
        this.listSP = fetchList();
        filltoTable(listSP);

        int flag = 0;
        for (SanPham sp : listSP) {
            if (sp.getTenSP().toUpperCase().contains(txtTimkiem.getText().toUpperCase())) {
                queryAll = "select * from SanPham where TenSP like N'%" + txtTimkiem.getText() + "%'";
                flag = 1;

                this.listSP = fetchList();
                filltoTable(listSP);
//                showDetail();

            }
        }
        if (flag == 0) {
            JOptionPane.showMessageDialog(this, "Không có sản phẩm cần tìm !");
            return;
        }
    }//GEN-LAST:event_btnTimkiemActionPerformed

    private void txtTimkiemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimkiemFocusGained
        if (txtTimkiem.getText().trim().equals("Search name..")) {
            txtTimkiem.setText("");
        }
    }//GEN-LAST:event_txtTimkiemFocusGained

    private void txtTimkiemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimkiemFocusLost
        if (txtTimkiem.getText().trim().equals("")) {
            txtTimkiem.setText("Search name..");
        }
    }//GEN-LAST:event_txtTimkiemFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSuaThongTin;
    private javax.swing.JButton btnThemSanPham;
    private javax.swing.JButton btnTimkiem;
    private javax.swing.JButton btnXoaSanPham;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtMaSanPham;
    private javax.swing.JTextArea txtMoTa;
    private javax.swing.JTextField txtNamSX;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTenSanPham;
    private javax.swing.JTextField txtTimkiem;
    // End of variables declaration//GEN-END:variables

    private ArrayList<SanPham> fetchList() {
        ArrayList<SanPham> result = new ArrayList<>();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

            Connection conn = DriverManager.getConnection(url, user, pass);
            Statement st = conn.createStatement();

            ResultSet rs = st.executeQuery(queryAll);
            while (rs.next()) {
                String masp = rs.getString("maSP");
                String tensp = rs.getString("tenSP");
                float gia = rs.getFloat("giaSP");
                int nam = rs.getInt("namSX");
                int sl = rs.getInt("soLuong");
                String moTa = rs.getString("motaSP");
                result.add(new SanPham(masp, tensp, gia, nam, sl, moTa));
            }
        } catch (SQLException ex) {
            Logger.getLogger(FrmSanPham.class.getName()).log(Level.SEVERE, null, ex);

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrmSanPham.class.getName()).log(Level.SEVERE, null, ex);
        }
        return result;
    }

    private void filltoTable(ArrayList<SanPham> data) {
        model = (DefaultTableModel) tblSanPham.getModel();
        model.setRowCount(0);
        for (SanPham sp : listSP) {
            model.addRow(new Object[]{sp.getMaSp(), sp.getTenSP(),
                sp.getGia(), sp.getNamSX(), sp.getSoLuong(), sp.getMoTa()});
        }
    }

    private void showDetail() {
        SanPham sp = listSP.get(index);
        txtMaSanPham.setText(sp.getMaSp());
        txtTenSanPham.setText(sp.getTenSP());
        txtGia.setText(sp.getGia() + "");
        txtNamSX.setText(sp.getNamSX() + "");
        txtSoLuong.setText(sp.getSoLuong() + "");
        txtMoTa.setText(sp.getMoTa());
        tblSanPham.setRowSelectionInterval(index, index);
    }
}
