/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Form;

import Class.Dang_ky;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class FrmDangKi extends javax.swing.JInternalFrame {

    /**
     * Creates new form FrmDangKi
     */
    protected ArrayList<Dang_ky> listDK;
    protected String url, dbUsername, dbPassword, queryAll;
    protected int index;
    protected DefaultTableModel model;

    public FrmDangKi() {
        initComponents();
        this.listDK = new ArrayList<Dang_ky>();
        this.dbUsername = "sa";
        this.dbPassword = "111111";
        this.queryAll = "select*from NHANVIEN";
        this.url = "jdbc:sqlserver://localhost:1433;databaseName=QLBH";
        this.listDK = this.festchList();
        this.fillTabel();
    }

    protected void fillTabel() {
        model = (DefaultTableModel) tblThongtinnhanvien.getModel();
        model.setRowCount(0);
        for (Dang_ky dk : listDK) {
            model.addRow(new Object[]{dk.getMa_nv(), dk.getUsername(), dk.getPassword(), dk.getTen_nv(),
                dk.getSo_dt(), dk.getEmail(), dk.getChuc_vu(), dk.getGioi_tinh(), dk.getDia_chi()});
        }
    }

    protected ArrayList<Dang_ky> festchList() {
        ArrayList<Dang_ky> result = new ArrayList<Dang_ky>();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection conn = DriverManager.getConnection(this.url, this.dbUsername, this.dbPassword);
            Statement st = conn.createStatement();

            String query = this.queryAll;
            ResultSet rs = st.executeQuery(query);

            while (rs.next()) {
                String ma_nv = rs.getString("maNV");
                String username = rs.getString("username");
                String password = rs.getString("passwords");
                String ten_nv = rs.getString("tenNV");
                String so_dt = rs.getString("soDT");
                String email = rs.getString("email");
                String chuc_vu = rs.getString("chucVu");
                String gioi_tinh = rs.getString("gioiTinh");
                String dia_chi = rs.getString("diachi");
                result.add(new Dang_ky(ma_nv, username, password, ten_nv, so_dt, email, chuc_vu, gioi_tinh, dia_chi));
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrmDangKi.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FrmDangKi.class.getName()).log(Level.SEVERE, null, ex);
        }

        return result;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtMaNV = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTenNV = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cboChucVu = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDiaChi = new javax.swing.JTextArea();
        btnDangKi = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        btnSuathongtin = new javax.swing.JButton();
        btnXoanhanvien = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblThongtinnhanvien = new javax.swing.JTable();
        txtTimkiem = new javax.swing.JTextField();
        btnTimkiem = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        ckNam = new javax.swing.JRadioButton();
        ckNu = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        txtSodienthoai = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtConfirmPAss = new javax.swing.JPasswordField();
        txtPassword = new javax.swing.JPasswordField();
        txtClear = new javax.swing.JButton();

        setClosable(true);
        setTitle("Đăng kí thành viên");
        setToolTipText("");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("ĐĂNG KÍ THÀNH VIÊN");

        jLabel2.setText("USERNAME :");

        jLabel3.setText("PASSWORD:");

        jLabel4.setText("TÊN NHÂN VIÊN:");

        jLabel5.setText("SỐ ĐIỆN THOẠI:");

        jLabel6.setText("EMAIL:");

        jLabel7.setText("CHỨC VỤ:");

        cboChucVu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nhân Viên", "Quản Lý" }));

        jLabel8.setText("ĐỊA CHỈ:");

        txtDiaChi.setColumns(20);
        txtDiaChi.setRows(5);
        jScrollPane1.setViewportView(txtDiaChi);

        btnDangKi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icon_Them_dangky.png"))); // NOI18N
        btnDangKi.setText("Đăng kí");
        btnDangKi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangKiActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Thông tin nhân viên :");

        btnSuathongtin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icon_suachua.png"))); // NOI18N
        btnSuathongtin.setText("Sửa thông tin");
        btnSuathongtin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuathongtinActionPerformed(evt);
            }
        });

        btnXoanhanvien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icon_xoa.png"))); // NOI18N
        btnXoanhanvien.setText("Xóa nhân viên");
        btnXoanhanvien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoanhanvienActionPerformed(evt);
            }
        });

        tblThongtinnhanvien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã nhân viên", "Username", "Password", "Tên nhân viên", "Số điện thoại", "Email", "Chức vụ", "Giới tính", "Địa chỉ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblThongtinnhanvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblThongtinnhanvienMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblThongtinnhanvien);

        txtTimkiem.setText("Search name ...");
        txtTimkiem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTimkiemFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTimkiemFocusLost(evt);
            }
        });
        txtTimkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimkiemActionPerformed(evt);
            }
        });

        btnTimkiem.setText("Tìm kiếm");
        btnTimkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimkiemActionPerformed(evt);
            }
        });

        jLabel10.setText("GIỚI TÍNH:");

        buttonGroup1.add(ckNam);
        ckNam.setSelected(true);
        ckNam.setText("Nam");

        buttonGroup1.add(ckNu);
        ckNu.setText("Nữ");

        jLabel11.setText("MÃ NHÂN VIÊN :");

        jLabel12.setText("CONFIRM PASS:");

        txtClear.setText("Clear");
        txtClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(336, 336, 336)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel12)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtMaNV, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtConfirmPAss, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtUserName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtPassword, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtSodienthoai, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(18, 18, 18)
                                        .addComponent(ckNam)
                                        .addGap(18, 18, 18)
                                        .addComponent(ckNu))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel7))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cboChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(44, 44, 44))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 809, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel9)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(txtTimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(27, 27, 27))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(186, 186, 186)
                                                        .addComponent(btnXoanhanvien)
                                                        .addGap(44, 44, 44)
                                                        .addComponent(btnSuathongtin))
                                                    .addComponent(btnDangKi))
                                                .addGap(70, 70, 70)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(btnTimkiem)
                                            .addComponent(txtClear))))
                                .addGap(22, 22, 22)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDangKi, btnSuathongtin, btnXoanhanvien});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel10, jLabel6, jLabel7, jLabel8});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel11, jLabel12, jLabel2, jLabel3, jLabel4, jLabel5});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtConfirmPAss, txtMaNV, txtPassword, txtSodienthoai, txtTenNV, txtUserName});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtConfirmPAss, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSodienthoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(cboChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(ckNam)
                            .addComponent(ckNu))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDangKi)
                    .addComponent(btnXoanhanvien)
                    .addComponent(btnSuathongtin)
                    .addComponent(txtClear))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTimkiem))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDangKi, btnSuathongtin, btnXoanhanvien});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDangKiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangKiActionPerformed

        try {
            if (txtUserName.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Nhập username");
                txtUserName.requestFocus();
                return;
            }
            for (Dang_ky dk : listDK) {
                if (dk.getUsername().equals(txtUserName.getText())) {
                    JOptionPane.showMessageDialog(this, "Username đã tồn tại , Nhập lại!");
                    txtUserName.requestFocus();
                    return;
                }
            }
            if (txtPassword.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Nhập password");
                txtPassword.requestFocus();
                return;
            } else if (txtConfirmPAss.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Nhập confirmpass");
                txtConfirmPAss.requestFocus();
                return;
            }
            if (!txtPassword.getText().equals(txtConfirmPAss.getText())) {
                JOptionPane.showMessageDialog(this, "Nhập confirmpass giống với password");
                txtConfirmPAss.requestFocus();
                return;
            }
            if (txtMaNV.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Nhập mã nhân viên");
                txtMaNV.requestFocus();
                return;
            }
            for (Dang_ky dk : listDK) {
                if (dk.getMa_nv().equals(txtMaNV.getText())) {
                    JOptionPane.showMessageDialog(this, "Mã nhân viên đã tồn tại , Nhập lại!");
                    txtUserName.requestFocus();
                    return;
                }
            }
            if (txtTenNV.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Nhập tên nhân viên");
                txtTenNV.requestFocus();
                return;
            } else if (txtSodienthoai.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Nhập số điện thoại");
                txtSodienthoai.requestFocus();
                return;
            }
            int sodt;
            try {
                sodt = Integer.parseInt(txtSodienthoai.getText());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Nhập số điện thoại là số");
                txtSodienthoai.requestFocus();
                return;
            }
            if (txtSodienthoai.getText().length() < 10 || txtSodienthoai.getText().length() > 10) {
                JOptionPane.showMessageDialog(this, "Nhập số điện thoại đủ 10 số");
                txtSodienthoai.requestFocus();
                return;
            }

            if (txtEmail.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Nhập email");
                txtEmail.requestFocus();
                return;
            }
            String email = "\\w+@\\w+(\\.\\w+){1,2}";
            if (!txtEmail.getText().matches(email)) {
                JOptionPane.showMessageDialog(this, "Nhập đúng định dạng email");
                txtEmail.requestFocus();
                return;
            }
            if (txtDiaChi.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Nhập địa chỉ");
                txtDiaChi.requestFocus();
                return;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi");
            return;
        }

        //add
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection conn = DriverManager.getConnection(this.url, this.dbUsername, this.dbPassword);

            String query = "insert into NHANVIEN values(?,?,?,?,?,?,?,?,?)";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, txtMaNV.getText());
            ps.setString(2, txtTenNV.getText());
            ps.setString(3, txtDiaChi.getText());
            ps.setString(4, txtSodienthoai.getText());
            ps.setString(5, txtEmail.getText());
            //gioi tinh
            String gioiTinh = "";
            if (ckNam.isSelected()) {
                gioiTinh = "Nam";
            } else {
                gioiTinh = "Nữ";
            }
            ps.setString(6, gioiTinh);
            ps.setString(7, txtUserName.getText());
            ps.setString(8, txtPassword.getText());
            //chuc vu
            String chucVu = cboChucVu.getSelectedItem() + "";
            ps.setString(9, chucVu);
            ps.execute();
            this.listDK = this.festchList();
            this.fillTabel();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrmDangKi.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FrmDangKi.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(this, "Thêm thành công");
    }//GEN-LAST:event_btnDangKiActionPerformed

    private void tblThongtinnhanvienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblThongtinnhanvienMouseClicked
        index = tblThongtinnhanvien.getSelectedRow();
        if (index > -1) {
            Dang_ky dk = listDK.get(index);
            txtUserName.setText(dk.getUsername());
            txtPassword.setText(dk.getPassword());
            txtConfirmPAss.setText(dk.getPassword());
            txtMaNV.setText(dk.getMa_nv());
            txtMaNV.disable();
            txtTenNV.setText(dk.getTen_nv());
            txtSodienthoai.setText(dk.getSo_dt());
            txtEmail.setText(dk.getEmail());
            cboChucVu.setSelectedItem(dk.getChuc_vu());
            String gioi_tinh = dk.getGioi_tinh();
            if (ckNam.getText().equalsIgnoreCase(gioi_tinh)) {
                ckNam.setSelected(true);
            } else {
                ckNu.setSelected(true);
            }
            txtDiaChi.setText(dk.getDia_chi());
        }
    }//GEN-LAST:event_tblThongtinnhanvienMouseClicked

    private void txtClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClearActionPerformed
        txtUserName.setText("");
        txtPassword.setText("");
        txtConfirmPAss.setText("");
        txtMaNV.setText("");
        txtMaNV.enable();
        txtTenNV.setText("");
        txtSodienthoai.setText("");
        txtEmail.setText("");
        cboChucVu.setSelectedIndex(0);
        ckNam.setSelected(true);
        txtDiaChi.setText("");
    }//GEN-LAST:event_txtClearActionPerformed

    private void btnTimkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimkiemActionPerformed

        this.queryAll = "select*from NHANVIEN";
        this.listDK = this.festchList();
        this.fillTabel();

        int ck = 0;
        for (Dang_ky dk : listDK) {
            if (dk.getTen_nv().toUpperCase().contains(txtTimkiem.getText().toUpperCase())) {
                this.queryAll = "select*from NHANVIEN where tenNV like N'%" + txtTimkiem.getText() + "%'";
                this.listDK = this.festchList();
                this.fillTabel();
                ck = 1;
            }
        }

        if (ck == 0) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy nhân viên có tên : " + txtTimkiem.getText());
            return;
        }
    }//GEN-LAST:event_btnTimkiemActionPerformed

    private void txtTimkiemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimkiemFocusGained
        if (txtTimkiem.getText().trim().equals("Search name ...")) {
            txtTimkiem.setText("");
        }
    }//GEN-LAST:event_txtTimkiemFocusGained

    private void txtTimkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimkiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimkiemActionPerformed

    private void txtTimkiemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimkiemFocusLost
        if (txtTimkiem.getText().trim().equals("")) {
            txtTimkiem.setText("Search name ...");
        }
    }//GEN-LAST:event_txtTimkiemFocusLost

    private void btnXoanhanvienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoanhanvienActionPerformed
        index = tblThongtinnhanvien.getSelectedRow();
        if (index < 0) {
            JOptionPane.showMessageDialog(this, "Chọn nhân viên cần xóa");
            return;
        }
        int a = JOptionPane.showConfirmDialog(this, "Bạn chác chắn muốn xóa ?");
        if (a != JOptionPane.YES_OPTION) {
            return;
        }

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection conn = DriverManager.getConnection(this.url, this.dbUsername, this.dbPassword);

            String query = "delete NHANVIEN where maNV = ?";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, tblThongtinnhanvien.getValueAt(index, 0) + "");
            ps.execute();
            this.listDK = this.festchList();
            this.fillTabel();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrmDangKi.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FrmDangKi.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(this, "Xóa thành công");
    }//GEN-LAST:event_btnXoanhanvienActionPerformed

    private void btnSuathongtinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuathongtinActionPerformed
        index = tblThongtinnhanvien.getSelectedRow();
        if (index < 0) {
            JOptionPane.showMessageDialog(this, "Chọn nhân viên cần sửa thông tin");
            return;
        }
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection conn = DriverManager.getConnection(this.url, this.dbUsername, this.dbPassword);

            String query = "update NHANVIEN set tenNV =?,diachi =?,soDT =?,email =?,"
                    + "gioiTinh =?,username =?,passwords =?,chucVu =?  where maNV = ? ";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, txtTenNV.getText());
            ps.setString(2, txtDiaChi.getText());
            ps.setString(3, txtSodienthoai.getText());
            ps.setString(4, txtEmail.getText());
            //gioi tinh
            String gioiTinh = "";
            if (ckNam.isSelected()) {
                gioiTinh = "Nam";
            } else {
                gioiTinh = "Nữ";
            }
            ps.setString(5, gioiTinh);
            ps.setString(6, txtUserName.getText());
            ps.setString(7, txtPassword.getText());
            //chuc vu
            String chucVu = cboChucVu.getSelectedItem() + "";
            ps.setString(8, chucVu);
            ps.setString(9, tblThongtinnhanvien.getValueAt(index, 0) + "");
            ps.execute();
            this.listDK = this.festchList();
            this.fillTabel();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrmDangKi.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FrmDangKi.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(this, "Update thành công");
    }//GEN-LAST:event_btnSuathongtinActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDangKi;
    private javax.swing.JButton btnSuathongtin;
    private javax.swing.JButton btnTimkiem;
    private javax.swing.JButton btnXoanhanvien;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cboChucVu;
    private javax.swing.JRadioButton ckNam;
    private javax.swing.JRadioButton ckNu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblThongtinnhanvien;
    private javax.swing.JButton txtClear;
    private javax.swing.JPasswordField txtConfirmPAss;
    private javax.swing.JTextArea txtDiaChi;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtSodienthoai;
    private javax.swing.JTextField txtTenNV;
    private javax.swing.JTextField txtTimkiem;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
